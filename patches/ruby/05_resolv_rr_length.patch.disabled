diff --git a/lib/resolv.rb b/lib/resolv.rb
index c977584..93afebb 100644
--- a/lib/resolv.rb
+++ b/lib/resolv.rb
@@ -1677,7 +1677,7 @@ def get_rr
           name = self.get_name
           type, klass, ttl = self.get_unpack('nnN')
           typeclass = Resource.get_class(type, klass)
-          res = self.get_length16 { typeclass.decode_rdata self }
+          res = self.get_length16 { |l| typeclass.decode_rdata self, l }
           res.instance_variable_set :@ttl, ttl
           return name, ttl, res
         end
@@ -1692,7 +1692,7 @@ def encode_rdata(msg) # :nodoc:
         raise EncodeError.new("#{self.class} is query.")
       end
 
-      def self.decode_rdata(msg) # :nodoc:
+      def self.decode_rdata(msg, len) # :nodoc:
         raise DecodeError.new("#{self.class} is query.")
       end
     end
@@ -1713,7 +1713,7 @@ def encode_rdata(msg) # :nodoc:
         raise NotImplementedError.new
       end
 
-      def self.decode_rdata(msg) # :nodoc:
+      def self.decode_rdata(msg, len) # :nodoc:
         raise NotImplementedError.new
       end
 
@@ -1770,7 +1770,7 @@ def encode_rdata(msg) # :nodoc:
           msg.put_bytes(data)
         end
 
-        def self.decode_rdata(msg) # :nodoc:
+        def self.decode_rdata(msg, _) # :nodoc:
           return self.new(msg.get_bytes)
         end
 
@@ -1805,7 +1805,7 @@ def encode_rdata(msg) # :nodoc:
           msg.put_name(@name)
         end
 
-        def self.decode_rdata(msg) # :nodoc:
+        def self.decode_rdata(msg, _) # :nodoc:
           return self.new(msg.get_name)
         end
       end
@@ -1893,7 +1893,7 @@ def encode_rdata(msg) # :nodoc:
           msg.put_pack('NNNNN', @serial, @refresh, @retry, @expire, @minimum)
         end
 
-        def self.decode_rdata(msg) # :nodoc:
+        def self.decode_rdata(msg, _) # :nodoc:
           mname = msg.get_name
           rname = msg.get_name
           serial, refresh, retry_, expire, minimum = msg.get_unpack('NNNNN')
@@ -1939,7 +1939,7 @@ def encode_rdata(msg) # :nodoc:
           msg.put_string(@os)
         end
 
-        def self.decode_rdata(msg) # :nodoc:
+        def self.decode_rdata(msg, _) # :nodoc:
           cpu = msg.get_string
           os = msg.get_string
           return self.new(cpu, os)
@@ -1973,7 +1973,7 @@ def encode_rdata(msg) # :nodoc:
           msg.put_name(@emailbx)
         end
 
-        def self.decode_rdata(msg) # :nodoc:
+        def self.decode_rdata(msg, _) # :nodoc:
           rmailbx = msg.get_string
           emailbx = msg.get_string
           return self.new(rmailbx, emailbx)
@@ -2011,7 +2011,7 @@ def encode_rdata(msg) # :nodoc:
           msg.put_name(@exchange)
         end
 
-        def self.decode_rdata(msg) # :nodoc:
+        def self.decode_rdata(msg, _) # :nodoc:
           preference, = msg.get_unpack('n')
           exchange = msg.get_name
           return self.new(preference, exchange)
@@ -2045,7 +2045,7 @@ def encode_rdata(msg) # :nodoc:
           msg.put_string_list(@strings)
         end
 
-        def self.decode_rdata(msg) # :nodoc:
+        def self.decode_rdata(msg, _) # :nodoc:
           strings = msg.get_string_list
           return self.new(*strings)
         end
@@ -2122,7 +2122,7 @@ def encode_rdata(msg) # :nodoc:
           msg.put_bytes(@altitude.altitude)
         end
 
-        def self.decode_rdata(msg) # :nodoc:
+        def self.decode_rdata(msg, _) # :nodoc:
           version    = msg.get_bytes(1)
           ssize      = msg.get_bytes(1)
           hprecision = msg.get_bytes(1)
@@ -2192,7 +2192,7 @@ def encode_rdata(msg) # :nodoc:
             msg.put_bytes(@address.address)
           end
 
-          def self.decode_rdata(msg) # :nodoc:
+          def self.decode_rdata(msg, _) # :nodoc:
             return self.new(IPv4.new(msg.get_bytes(4)))
           end
         end
@@ -2237,7 +2237,7 @@ def encode_rdata(msg) # :nodoc:
             msg.put_bytes(@bitmap)
           end
 
-          def self.decode_rdata(msg) # :nodoc:
+          def self.decode_rdata(msg, _) # :nodoc:
             address = IPv4.new(msg.get_bytes(4))
             protocol, = msg.get_unpack("n")
             bitmap = msg.get_bytes
@@ -2269,7 +2269,7 @@ def encode_rdata(msg) # :nodoc:
             msg.put_bytes(@address.address)
           end
 
-          def self.decode_rdata(msg) # :nodoc:
+          def self.decode_rdata(msg, _) # :nodoc:
             return self.new(IPv6.new(msg.get_bytes(16)))
           end
         end
@@ -2339,7 +2339,7 @@ def encode_rdata(msg) # :nodoc:
             msg.put_name(@target)
           end
 
-          def self.decode_rdata(msg) # :nodoc:
+          def self.decode_rdata(msg, _) # :nodoc:
             priority, = msg.get_unpack("n")
             weight,   = msg.get_unpack("n")
             port,     = msg.get_unpack("n")
